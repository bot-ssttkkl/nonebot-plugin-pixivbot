"""init db

修订 ID: a52404f42561
父修订: 96ced46e72e9
创建时间: 2023-11-04 02:55:26.244635

"""
from __future__ import annotations

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import sqlite

from nonebot_plugin_pixivbot.data.sql_common import UTCDateTime, PydanticModel
from nonebot_plugin_pixivbot.model import Illust, User

revision: str = 'a52404f42561'
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = ('nonebot_plugin_pixivbot',)
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pixivbot_download_cache',
                    sa.Column('illust_id', sa.Integer(), nullable=False),
                    sa.Column('page', sa.Integer(), nullable=False),
                    sa.Column('content', sa.BLOB(), nullable=False),
                    sa.Column('update_time', UTCDateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('illust_id', 'page', name=op.f('pk_pixivbot_download_cache')),
                    info={'bind_key': 'nonebot_plugin_pixivbot'}
                    )
    with op.batch_alter_table('pixivbot_download_cache', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pixivbot_download_cache_update_time'), ['update_time'], unique=False)

    op.create_table('pixivbot_illust_detail_cache',
                    sa.Column('illust_id', sa.Integer(), nullable=False),
                    sa.Column('illust', PydanticModel(Illust),
                              nullable=False),
                    sa.Column('update_time', UTCDateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('illust_id', name=op.f('pk_pixivbot_illust_detail_cache')),
                    info={'bind_key': 'nonebot_plugin_pixivbot'}
                    )
    with op.batch_alter_table('pixivbot_illust_detail_cache', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pixivbot_illust_detail_cache_update_time'), ['update_time'], unique=False)

    op.create_table('pixivbot_illust_set_cache',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('cache_type', sa.String(), nullable=False),
                    sa.Column('key', sqlite.JSON(), nullable=False),
                    sa.Column('update_time', UTCDateTime(), nullable=False),
                    sa.Column('pages', sa.Integer(), nullable=True),
                    sa.Column('next_qs', sqlite.JSON(), nullable=True),
                    sa.Column('size', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_pixivbot_illust_set_cache')),
                    sa.UniqueConstraint('cache_type', 'key', name='uq_pixivbot_illust_set_cache_cache_type_key'),
                    info={'bind_key': 'nonebot_plugin_pixivbot'}
                    )
    with op.batch_alter_table('pixivbot_illust_set_cache', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pixivbot_illust_set_cache_update_time'), ['update_time'], unique=False)

    op.create_table('pixivbot_local_tag',
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('translated_name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('name', name=op.f('pk_pixivbot_local_tag')),
                    info={'bind_key': 'nonebot_plugin_pixivbot'}
                    )
    with op.batch_alter_table('pixivbot_local_tag', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pixivbot_local_tag_translated_name'), ['translated_name'], unique=False)

    op.create_table('pixivbot_pixiv_binding',
                    sa.Column('platform', sa.String(), nullable=False),
                    sa.Column('user_id', sa.String(), nullable=False),
                    sa.Column('pixiv_user_id', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('platform', 'user_id', name=op.f('pk_pixivbot_pixiv_binding')),
                    info={'bind_key': 'nonebot_plugin_pixivbot'}
                    )
    op.create_table('pixivbot_subscription',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('session_id', sa.Integer(), nullable=False),
                    sa.Column('code', sa.String(), nullable=False),
                    sa.Column('type', sa.Enum('random_bookmark', 'random_recommended_illust', 'random_illust',
                                              'random_user_illust', 'ranking', name='scheduletype'), nullable=False),
                    sa.Column('kwargs', sqlite.JSON(), nullable=False),
                    sa.Column('bot_id', sa.String(), nullable=False),
                    sa.Column('schedule', sqlite.JSON(), nullable=False),
                    sa.Column('tz', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_pixivbot_subscription')),
                    sa.UniqueConstraint('bot_id', 'session_id', 'code',
                                        name='uq_pixivbot_subscription_bot_id_session_id_code'),
                    info={'bind_key': 'nonebot_plugin_pixivbot'}
                    )
    op.create_table('pixivbot_user_detail_cache',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('user', PydanticModel(User), nullable=False),
                    sa.Column('update_time', UTCDateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_pixivbot_user_detail_cache')),
                    info={'bind_key': 'nonebot_plugin_pixivbot'}
                    )
    with op.batch_alter_table('pixivbot_user_detail_cache', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pixivbot_user_detail_cache_update_time'), ['update_time'], unique=False)

    op.create_table('pixivbot_user_set_cache',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('cache_type', sa.String(), nullable=False),
                    sa.Column('key', sqlite.JSON(), nullable=False),
                    sa.Column('update_time', UTCDateTime(), nullable=False),
                    sa.Column('pages', sa.Integer(), nullable=True),
                    sa.Column('next_qs', sqlite.JSON(), nullable=True),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_pixivbot_user_set_cache')),
                    sa.UniqueConstraint('cache_type', 'key', name='uq_pixivbot_user_set_cache_cache_type_key'),
                    info={'bind_key': 'nonebot_plugin_pixivbot'}
                    )
    with op.batch_alter_table('pixivbot_user_set_cache', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pixivbot_user_set_cache_update_time'), ['update_time'], unique=False)

    op.create_table('pixivbot_watch_task',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('session_id', sa.Integer(), nullable=False),
                    sa.Column('code', sa.String(), nullable=False),
                    sa.Column('type', sa.Enum('user_illusts', 'following_illusts', name='watchtype'), nullable=False),
                    sa.Column('kwargs', sqlite.JSON(), nullable=False),
                    sa.Column('bot_id', sa.String(), nullable=False),
                    sa.Column('checkpoint', UTCDateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_pixivbot_watch_task')),
                    sa.UniqueConstraint('bot_id', 'session_id', 'code',
                                        name='uq_pixivbot_watch_task_bot_id_session_id_code'),
                    sa.UniqueConstraint('bot_id', 'session_id', 'type', 'kwargs',
                                        name='uq_pixivbot_watch_task_bot_id_session_id_type_kwargs'),
                    info={'bind_key': 'nonebot_plugin_pixivbot'}
                    )
    op.create_table('pixivbot_illust_set_cache_illust',
                    sa.Column('cache_id', sa.Integer(), nullable=False),
                    sa.Column('illust_id', sa.Integer(), nullable=False),
                    sa.Column('rank', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['cache_id'], ['pixivbot_illust_set_cache.id'], name=op.f(
                        'fk_pixivbot_illust_set_cache_illust_cache_id_pixivbot_illust_set_cache'), ondelete='cascade'),
                    sa.PrimaryKeyConstraint('cache_id', 'illust_id', name=op.f('pk_pixivbot_illust_set_cache_illust')),
                    info={'bind_key': 'nonebot_plugin_pixivbot'}
                    )
    op.create_table('pixivbot_user_set_cache_user',
                    sa.Column('cache_id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['cache_id'], ['pixivbot_user_set_cache.id'], name=op.f(
                        'fk_pixivbot_user_set_cache_user_cache_id_pixivbot_user_set_cache'), ondelete='cascade'),
                    sa.PrimaryKeyConstraint('cache_id', 'user_id', name=op.f('pk_pixivbot_user_set_cache_user')),
                    info={'bind_key': 'nonebot_plugin_pixivbot'}
                    )
    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pixivbot_user_set_cache_user')
    op.drop_table('pixivbot_illust_set_cache_illust')
    op.drop_table('pixivbot_watch_task')
    with op.batch_alter_table('pixivbot_user_set_cache', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pixivbot_user_set_cache_update_time'))

    op.drop_table('pixivbot_user_set_cache')
    with op.batch_alter_table('pixivbot_user_detail_cache', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pixivbot_user_detail_cache_update_time'))

    op.drop_table('pixivbot_user_detail_cache')
    op.drop_table('pixivbot_subscription')
    op.drop_table('pixivbot_pixiv_binding')
    with op.batch_alter_table('pixivbot_local_tag', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pixivbot_local_tag_translated_name'))

    op.drop_table('pixivbot_local_tag')
    with op.batch_alter_table('pixivbot_illust_set_cache', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pixivbot_illust_set_cache_update_time'))

    op.drop_table('pixivbot_illust_set_cache')
    with op.batch_alter_table('pixivbot_illust_detail_cache', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pixivbot_illust_detail_cache_update_time'))

    op.drop_table('pixivbot_illust_detail_cache')
    with op.batch_alter_table('pixivbot_download_cache', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pixivbot_download_cache_update_time'))

    op.drop_table('pixivbot_download_cache')
    # ### end Alembic commands ###
